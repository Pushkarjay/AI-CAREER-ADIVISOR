Workshop 2
[Music] [Music] [Music] [Music] [Music] [Music] Hello everyone and a very warm welcome to the second virtual workshop of Genai exchange hackathon. Uh so this hackathon is all about how we can utilize incorporate genai tools from Google cloud and it is part of the genai exchange program that has been running. the first leg of which was Jana Academy. So today we have gathered here to go through a virtual workshop which will consider MCP toolbox and travel recommendations for which we'll be connecting. But soon before that what we'll be doing is that we'll be going through the hackathon in detail understanding what the hackathon is all about and see what are the fundamentals of it. So Janai exchange hackathon is a part of the as I mentioned second phase of the genai exchange program wherein it is open to all the innovators, developers, IT practitioners, startups from across India to utilize Google cloud services and build the cutting edge technologies utilizing Google tools. So this is what the hackathon is all about. We went live and it is open to participants to explore build solutions that are solving for India. As we mentioned, it's open only for Indian participants to solve for India. There's a prize pool of 65 lakhs rupees which is up for grabs. Um hands-on experiences through workshop sessions that we are doing the second of which we are doing today. Uh we'll also have mentorship rounds during the next stages of the hackathon and then obviously a offline finale for the top teams. Uh so the timeline of the hackathon looks like we started on 23rd of July. The registration phase has been extended considering the problem statements were released later on. So we are running the registrations till 21st of September. The prototype submissions is when we are expecting the participants to make the submissions entirely based on the problem statements that they have selected. There are basically two tracks the student track and the professional track. So select accordingly as per the category that you fall in and the prototype submissions are to be made by 21st of September. Currently the online workshops are ongoing the second of which we are attending today. post that uh once you have made the submissions of prototype by 21st of September 15th October is when the short list announcement would be done further which uh the further enhancement of the prototype will be done uh will be given 10 days to further enhance based on the feedbacks provided from the evaluators and post which on 4th of November top 100 teams would be announced five for the student track five for 10 per problem statement for five student tracks and 10 per problem statement for five professional tracks and there would be a grand finale on 22nd of November. So that's the timeline for everyone and in terms of as I've mentioned what's the prize pool the total prize pool is of 65 lakhs out of which for student tracks we have distributed 25 lakh rupees and for professional tracks we have 40 lak rupees uh post that um what we'll be doing is that currently as all the participants are registering participants are exploring what the tools are etc we need to understand the fundamentals and as such What we are doing is that we are doing multiple sessions across different tools that are to be utilized and one such session that we are doing today is on MCP toolbox and travel recommendation and we have with us Gungjang G from Google cloud. She's a customer engineer at Google cloud. So hello hi Gungjan welcome to the session. Hey hi Gertik. Hello everyone. Thanks for having me today. Hello. Yes. So Gunjan over to you now and uh we'll take in the Q&A at towards the end. So over to you GJ. Thanks Kashik. Uh hello everyone. This is Gungjun. I am part of the Google cloud team. Uh I work here as a customer engineer and u it's great all of you seeing taking part in the GI hackathon and I'm sure that you will build some really nice use cases going forward. Uh today I'll take this opportunity to present you know to talk about uh how you can build your agents using Google uh native products and technologies. So we'll be briefing about uh uh ADK as well as uh uh MCP toolkit and we'll be doing a workshop on that and we'll doing the hands-on labs and we'll be uh executing it end to end right. So, so I'll just uh you know just share my screen. Let me know if everything is visible to you. Can I have some hand raises if it is visible? Thank you. Thank you. Super. So uh so today I'll cover so it's 410. So let's uh so in 10 20 minutes let's cover you know the basics of it so that we understand uh the how we are going to build uh agents how what the ATK actually provides uh what actually the some background on how the agents we can build where we are in the AI industry and uh it will all be technical today and then we'll follow along the lab and in case if you face any problem please feel free to uh put it in the chat box right so let me start with uh what is agentic AI right so you everybody is now talking about agentic AI where we are so lot much is happening in the industry today uh so from where like it is started uh so AI is you know when we AI is at a very broader level when we say it is more about when we expect machines to try to mimic you know human intelligence and when it comes to machine learning it is about like machine is trained to learn automatically without explicitly telling you know what it needs to be done. So ML you can think of it as about uh that you know machine based on the data that we give based on the information that we give it understand what it needs to be returned out that we used to do in machine learning then it comes an era of generative AI where uh instead of just based on the learned data and giving a subset of that data as an output generative AI is able to give you uh the ability to generate create text, images or video in different modality that it has not been learned explicitly on that particular data. Right? So this is how the generative AI has evolved. Now we have come into an era where it is agentic AI. So when we say agentic AI, it is like when you can agentic AI that can system that can plan and take actions and can understand what the like we do as a human, right? we understand what the problem statement is, what action do we need to we plan the strategy around it and this is how the agentic AI has been evolving. So this is very interesting times we we all are in. So how do how agentic AI is different from the generative AI right? So an and generative AI is more about generating new kind of a content where it can be text, images, video, audio in some form or the other and agentic AI is when we talk at a very broader level where the models where the AI can also understand the context and uh also take the actions and behave the human will make. So let's understand few use cases right? If you see this particular use cases that you see over here. So generative AI basically it says that you know the examples like create write a poem for me. This is the data. Can you extract some information out of it? Can you summarize this particular data? Can you generate this picture? Right. While agentic AI is like that you know I need to plan a vacation. Can you help uh get the get me a plan planner based on my inputs that these are the days this is the destination. Can you ask me relevant question and help me plan a vacation or a trip or my if if uh you know in IT industry it could be like my VPN is down. These are the logs there you can get the information. Can you suggest what could have been the problem? diagnose it, document it, create a Jira case, raise alert, send the email to the respective people. Right? This is this is how the powerful the agentic AI looks like. Right? So, how do we say it that agentic AI uses generative AI as a brains to it, right? Because without generative AI, without understanding the power of the LLMs, uh agentic AI won't work, right? So LLM the generative AI the LLM becomes the brain of the agentic AI right so how have we evolved so far just right so you you must be following from the last one one and a half and two years that how we have been evolving right so earlier it was there there was there a new LLM has come into the market and you write the prompt right you write the prompt based on its knowledge base it's give you the some answers right then we move further and we said okay my the context is very large the document is very large there are lot of information can an can now llm give me the desired output and summarize a long document that it was not able to process earlier now we created the strategy of retrieval drags right then we moved one step further okay now we are able to pass the long context different different modality of data. Can we take some kind of a actions on it like can it summarize the uh data and can send it to be uh maybe my inbox or you know or post it to some other third party information. Then it is like till then it was more of a generative AI kind of a work. Now the things come use cases coming okay I can do all these all these things into fragments right. What if if there is somebody who can plug all this and do the take the actions on behalf of me. There it comes the uh definition of agent that it understand the context. It knows what it needs to do. It take help from the tools to create to take some actions and it understands and can parse your data. Well, now we have created one agent in this particular model. Now u of course now again single agent cannot be a superhero. It needs uh we need to fragment a bigger task into multiple agents where uh you know they can collaborate they can independently independently work on their own subset of information or subset of task and then can jointly do a bigger uh task. So there we came the concept of multi- aent system where multiple agents collaborate together for a desired output. Now uh that after that thing what next thing comes in? I have created one agent uh but I need help you know somebody else has also created one agent just like we consume APIs for different subsystems right we interact with different subsystems using the APIs today. Now u somebody some say there is some u some agent that has been created by SAP solutions or maybe some agent has been created by Microsoft systems right how do I collaborate my agent can take have can do a collaboration with those agent that has already been built and published right so this is how we the agent to agent protocols and all these things have come into the picture where we say that multi- aent systems with more agents right so far with me everybody. Yes. No. Maybe. Can we have some hands up? Okay. So, remote agent uh yeah so remote Niharika had a question that's what is remote agent? So remote agent you can think of it say for example let me take an example something like uh you know if you plan a trip right you go to uh some uh airline website you go to some hotel website and then you uh go to some uh maybe uh some for for hotels you go to make my trip right or you for flight booking you go to some other trip and for local siting you go to some other like now what if make my trip has already created an agent and you as uh one of the you know applications you want to write an application where your agent want to leverage uh you know make my trip agent as one of the entity from where like see likewise like you today consume uh say if you want to have an integration with make my trip or any other subsystem you use APIs to connect those subsystems right when you build your own application now what if those APIs has already been exposed as part of the agent. How would you connect with them? Right? So that is where we need A2A kind of a protocols where you connect your agents to the uh external agents for which you don't have a direct access to but you using some uh using APIs and frameworks you can call those agents. Okay. Okay. So when it comes to uh agent platform in GCP so uh you will see some kind some components over here that we will be doing in our workshop today. Okay. So if you see over here this particular slide you will see that uh uh there is a agent framework right in the center. So agent framework is uh you must if you have built some kind of a agents in the past you can see that uh there are multiple uh libraries that you can use to create agents like blue AI a2G from Microsoft langraph manag likewise Google has has also come up with the opensource ADK that is uh agent framework that is ADK agent development kit that has the libraries to support for building the agent Right? And then it uh this framework when you write the agent you will interact with different kind of a tools. So tools you can think of it as a applications or you know databases MCP tools right where you will get the information and take the actions on and then of course uh there would be models. So ADK is can connect with any kind any models uh that has access to uh Gemini direct being a Google product Gemini models are directly integrated. So you integrate with your Google cloud project and you can access the Gemini models from there. Likewise if there are any other opensource models you can always use model garden and get the access of the opensource models from there. And uh so as I said earlier also models are the brain of agent right. So uh while for creating any kind of a agent you need a toolkit using which you will write the application. So ADK works that for taking actions connecting to other sources of information you will need tools and for for making the information uh understanding of the context you will need models and if there are any agents that you want to integrate uh with you will need A2A. So we will not be covering A2A in this session. Maybe on later sessions you will be requiring A2A or you can always go and read about it. Uh when it comes to this is the right hand side you see is for the development side. So once you build your agent you will need you know a platform where you can deploy these agents. So in the left hand side you see there is a agent engine. You can deploy it on agent engine. You can deploy it on cloud run right or you can deploy it on compute engine as per the configuration of the requirements. So this is the deployment model and and um any any question so far do you have any challenge? So in this particular lab we will be covering ADK we will be covering tool MCP tool and uh we will be hosting it on cloud run if the time permits. Yes. Okay. Can we use open AI clawed as LLM engine? as you can use if you have access to how stable the system is especially on the AGI agent and in relation to other similar technologies. Uh see I think you should try it and then you share the feedback is quite stable. It is used in production for lot of agent that been built so far. Okay. Okay. So let's move forward. So what next we will cover is the ADK key concepts. So uh this is very important because while building the agents uh we should always know that you know what kind of uh a SDKs are provided and what the agent means. How do we define an agent? How do we configure an agent? So has anybody built any kind of application and they have explored building uh agent simple or complex with ADK before? Anybody from the chat? Super cycle says that he has built some kind of agents. Okay. Super. This will be very helpful while uh you know while in while you will be building your own agents for this uh hackathon, right? So u so first start with like what is ADK? It's a framework just like you use AAI and AG2 and other uh frameworks. So it is published by Google. It's for developing and deploying the AI agents and uh it integrates with popular LLMs and opensource and native AI tools and uh it it uh actually it it in because it is a Google native uh Google developed ADK and SDK. So it integrates very well with other Google system subsystems like BigQuery, CloudSQL that we will see today, right? So how do we define an agent in ADK? So if you see there is a base agent and there are multiple uh categories of agents how you can define and you can architect your solution well right. So agent is when you define an agent. The agent is a self-contained execution unit. There you define you know what is the goal is what the tools it should be using and you know if there are anything specific information which model you want agent to using all these you define as a as part of the when you define an agent right and here if you see when you define an agent uh there are multiple uh agents type of agents for for creating the workflows that you define. So when first on the left hand side in the new you see the LLM based agent. So LLM based agents are agents where you say for example you it's the main agent that where you integrate you specify your LLM. These are the LLM. This is the objective. This is what you should be behave agent should be behaving. This is what the information it needs to take care of. These are the guard rules. These are the guidelines, right? Lot of information that you provide comes to the LLM agent, right? It does all the reasoning and planning and generate the output, right? And then creating there are workflow agents and these are the custom logics that you can create. So, we'll cover the cuh workflow agents. So first like I just want to give you a glimpse you will be creating similar kind of a agent in our workshop as well. So how do you actually create an agent? So you will write the syntax would be very simple like you will create an LLM agent there you define that which model you are using. Uh you define give the name to a model and you give the instruction what this model is what this agent is supposed to do. right now uh for some kind for the uh for for the agents like say for example these ones like if you want uh so I'll go a little faster so agents something like if you want to create agents and you want some kind of a sequential processing right so say for example uh you uh first agent says you write the code second agent says you uh you you verif you you review the code and third agent you create uh you refactor the code and you want all these agents to work one after another. So how do you chain that information? You can use uh sequential agent how so how do you define that sequential agent if you see on the right hand side in the gray box sequential agent and you define the sub agents one writer agent reviewer agent and refactor agent. So what will happen is once you execute this code these agents will execute one after another right. So this code writer, agent, reviewer, rigbacker all three are independent agents but you have create an orchestrator that will call these agents one after another. Right? Similarly in parallel agents say for example if you want like travel booking, you want to book hotel, you want to book aine, you want to book some sightseeing. So these tasks can be done in parallel. So you can create an orchestration layer where you define that the okay this is my parallel agent but all these agent you can uh the sub agents you can call this in parallel right and similarly loop agents uh you can create loop kind of orchestration using loop agents. So why these all kind of a different orchestration is available is important because when you build an application it is not always the mono monolithic and simple workflow that you know this do this and get this it is not always that simple. So you need workflows to orchestrate and create the workflows in the right manner. So this is where like library provides you off the shelf all these hooks so that you can manage your application or create your application well. Now there there are some tools that we will be exploring today. Some are like built-in tools. Built-in tools say for example Google search you want uh you know model to go to the Google search and get the information from there and give you the output right. So you can use Google search you can use vert.xi search bigquery these are like offtheshelf built-in tools that are available in the library and you can use them. There are fun there are the other tools like function tools agent as a tool where you need to uh create your business logic and expose them as an agent uh for expose them as a tool uh so that your main agent can refer those tools and can take actions as specified in the logic just a sample code so that you all are aware this we'll be using in today's workshop as well um this one uh like in the ADK you import that Google search and as a tool you mention that you know which tool you are using. So this is the build example of the building tool. Now how do we create a function tool? Uh similarly function tool is something simple. Example here in this get weather report you have created a Python function. It does something something take the based on the city name it returns you some output right this is something a very basic logic but of course when you create a bigger application it would it would be more complex and you wrap this particular function as the function tool right the one in the highlighted one and your model when you create an agent on the right hand side you can you can use this particular tool as a you know what you have created on the left as a tool So whenever uh there is a query to the agent it will refer this r tool to return the output right and similarly when you create an agent you can specify those agent as well as a tool to them right so different methods based on the use cases uh you know uh you can plan you know what kind of a tool you want to create you want to create uh uh you can create write a python function and expose it as a tool. You want to write an agent and expose it as a tool. So based on the use cases and the design pattern that you want to use, you need to choose the right model. Now quickly session and memory, how do we uh there are option for retaining the session and memory. Uh because when we create the agent, it is very important that it understand what was asked earlier. So create so you can always go and refer you know just there's a big library of ADK you it's worth a good uh to touch upon the session and memory as well likewise callbacks are a good very important uh functions over here that for creating the end to end application so do please go and do read on this as well okay so I'll take a pause here because I want to spend some time on workshop as well. So we are already 4:30. So I think uh let's switch to the workshop. Okay. Okay. So if we if the time permits maybe we'll we can you know talk about more on what the um the remaining of the slides where we'll talk about NCP. But anyways we will be covering that in the workshop. So let me know if everybody is uh able to open this particular link. Right. Right. Do we have this link in the chat? Okay, I'm just pasting it. Try this if everybody's open to Okay. Somehow I'm not Oh, thank you. Please if you are able to open this. So once you open it, it will ask you. [Music] So you Yeah. Can you try this? Do you s see this window and you need to uh register with your Gmail account and then you will see a uh click here to access your credits. Right? If you click over here, you just it will be filled come filled with your name, coupon code, anything. You just need to accept and continue. All right, I see some done and okay. Super. All right. So are you redirect to console Google cloud console let me know is every is Google cloud console is visible to everybody yes super here you can go and Create. Yeah. Create a new project if you're not already redirected to create a new project. Say just name give a name to a project. Okay. And connect. Uh Dishant you can create a new project if that helps. If you have uh already have few projects maybe you create a new one. And also just one more thing if if people have not checked it or you can also check if you have just type in the search bar credits and see if you have you know $5 credit to your to your billing account here and your u billing account should be platform trial billing. Just check just check that before uh you know you proceed. And once you see like $5 credits that will be that will be credit as part of this one you select your project. Uh okay praetti what do you want uh to tell again uh how to see the credits? Uh a have you created a new project? Anuki $300 credit you can use but for this hackathon you can also use this $5 credit. Uh okay some people are asking how we've reached over here. So uh in your uh so in your uh chat there is a hackathon link that been shared. You just need to click it register it with your Gmail account. You will be redirected to a uh Google cloud console page here. If you just type in the credit, you you will see uh the credits also. You can go to credits. It's not a mandatory step, but just to check if there are $5 credits, but if you are using your own Gmail, your own Google Cloud account, that is also okay, right? So, that's not a problem. And you can create a new project or select an existing one whatever works best for you. Right? So uh so we'll be proceeding with the uh with the uh lab. So do you have uh this lab link over here everybody? Do do you have access to the lab link? Uh so saga whatever tools that you use today Google it will be it will be it will cover in your $5 account but Yeah. Uh can uh team can you share the hackathon link the lab link so that people can follow along. Okay. So, we'll be sharing the lab link soon. Please see if you are able to access this lab links. Cool. Search project on search bar and create new proof trial building. Got it. Cool. There is again lab link. Please open that lab link. Got it. Okay. Cool. Super. Super. So let's uh uh let's uh begin with the lab right. So what we will do is we will be creating um okay a an agent today that will give you that that will connect with the NCP server that NCP server will give some you know will configure u uh a database that MCP server will be integrated to and we'll create an agent that will access uh that will access this tool to get the answers and reply to the uh user. Right? So, it's an interesting one. Please follow along. If you're not able to even if you are not able to complete it, uh this is very detailed documented lab. You can uh you know you can go and try it later as well if that but please pay attention over here. It will be helpful. Right. So on the uh right hand side if you see there is a cloud shell uh icon for the cloud shell. So it is a command line interface uh where you can you know uh you can do and do the command line. Sorry I think I was not sharing it but on the right hand side on the right hand side there is a tab over here right this cloud shell. So if you click over here you a command line interface will be open for you. Okay. So, we'll be writing some commands over here. Okay. So, I'll uh so if you go over here, you just paste the commands. These are like G-Cloud commands. So, it will set up the con set up the environment like uh who the user is, right? And then if you have side by side I won't be able to switch too much between the uh windows otherwise it will be very messy. So I request that uh you know you follow along with the lab uh details that is given. Uh go to the section number two and there are few commands that have been listed. G-cloud O list G config project list and uh okay so if you see uh when we configure the project test lab is your active project is test lab hack. This is what it is right and then you need to enable few APIs. So why we need to enable these APIs? Because uh uh by default most of the APIs are turned off for the for the for the reasons that you should not people should not be get you know to uh uh charged unnecessarily or unintentionally. So you enable the API before using these services. Is everybody so far with me? And if you don't and if you don't know how to get the project from just I just clear the screen for you. Okay, you can go to config set project. When you click on this, you can copy the project ID from here. You need to learn Python for this particular one. Yes. Okay. This has been completed successfully. Um so just follow along. So we are moving to step number three. So step number three says we need to create a cloud SQL instance. Right? So I'll be creating a cloud SQL. Uh so it is like a postgrad SQL server. So just say I'll create a SQL server with hotel DB instance postgra version 15 DB name and some enterprises. Okay. You can always use multiple tabs for Okay. So here. So how do we see that you know what we have configured? So we go to cloud SQL. Click on SQL here in this. If you see my uh it is still creating the SQL server for me. Not my rate limit is exceeded for what we have not started. Yes. Uh just see if you have followed the lab and you have enabled the APIs in the step number two. they have been uh you know that APIs needs to be enabled. Make sure you are you have open enabled the API and if you go to the uh console if you type in cloud SQL you can go to the product SQL here you will see that a new database is being created. Okay. And it is still in progress. We'll wait for a minute. Uh okay. If you go to the to enable the APIs, there is in the lab there is a section number two point number eight. There you go and enable the APIs, right? G-Cloud services enabled. There are 78 APIs that you need to enable. After you enable the APIs, we'll create a cloud SQL instance. Okay. Let me know if uh Is anybody till here? It's creating the database at the same step where I am so far. Okay, great. Great. Uh, Kaneska, can you try um with your email id and the link that we have provided earlier? Can you scroll up in the chat window and see there's a link being provided for registration. Maybe you can try that again. Okay. So in the meanwhile I'll give you a walk through of how the SQL instance would look like. So here if you click on the instance that is being provisioned so far okay you go to cloud SQL studio on the left hand side it will ask you which database you want to connect to. So once we have the database created, it will show up over here. Okay. So let's wait. It's taking time more than usual for creating a database instance. But let's give it some time. In the meanwhile, what what I can do is I can help you. Uh let's discuss what we are going to do as part of the workshop in the next steps. Right? So once we create the database we will uh populate it with some uh we'll create a table hotels and we'll populate some values into it. Right? So now our database is ready. So then we will create a toolbox uh MCP toolbox for databases. So MCP toolbox for databases is an already given MCP server for databases uh for which if you click on that link uh there is a code available or the complete architecture and the code is available you so basically what it is is it's kind of a simple interface or integration point where you specify okay if you want to connect to any of the databases right so how how would you integrate so think of it as a C type charger right that you have a C type of port and connector, you can connect multiple and different kind of a devices to it, right? So, MCP toolbox for databases is kind of that toolbox for which behind the scenes you can plug in any of your databases, the supported ones and then your uh agents and different uh applications can use those toolbox to connect to the respective databases, right? All right. So, so we'll go back to there and quickly create tables. So, here if you see the database configuration has is been created. I'll share. I'll go to CloudSQL instance. Click this and go to cloud SQL studio. It will ask me which database to connect. If you click on the database, it will select post gray. And as part of the configuration, we have also given post as the password. All right. Now we go to the query part where we'll write okay let's create this table and we will populate some data. So all these steps and queries are provided to you as part of the work as part of the lab details. So you can go and create this. So I'm also copy doing a copy paste from there. You can also do that. That's quite simple. Right? So we have created a database. we have created uh okay and we can also test it that these are the list of hotels that we have created as part of the database. Okay. So these are the hotel these are the location price checkin date checkin out book blah blah all this information a simple database we have created what we will do next is we'll create a MCP server okay so um so we will use uh the toolbox that is provided information I want you all to come back to the console screen or if you are left behind Just follow along with me. Just see how I am doing it and where I where I'm doing it and so that later on you can do it. Right. MS. Okay. So you create uh MCP folder. You come over here and execute these commands. So I had already done this earlier. So you create a MCP toolbox in your directory. Uh you go to that directory and you export this command and you do uh you execute this command. It will create a binary. It will install a binary of MCP toolbox for you. Right now the important part is uh that how do we configure? So if you see over here tools.xm exam uh you know toolbox. So here you see that you know how we are defining it. You define your project. You define uh first of all you define your source that your source is uh your cloud SQL pos. Your project ID is region is this. Your instance is this. Database username password. This is details that you you need to provide for the connection. And here you define the tools that you search hotel by name. You search hotel by location. Right? And what it needs to done what is need to do it's create the postgress SQL search hotel if if what this particular function tool does is it search the hotel by the name right okay and if the input is name the description of that particular input would be name of the hotel and you will be uh what the query would be and similarly if you want to search hotel by location what would be the query and how will it will do all this u you know uh how the model should be uh how this tool should be returning the uh response and you can also create your tool set that in particular tool set do you need all these function or which all the function so all these you define it as a toolbox and you just uh run this as a tool so I'll just show you how do we run it once you execute execute all these steps. Okay, you run this tool. Okay, what is uh it is saying unable to initialize, unable to connect successfully. Okay. LS CD we are not yet. Let's try one more time. Okay. Okay, there's a problem. We can fix it. Okay, maybe I just correct the project name. That should help test iPhone lab. Okay. So, this is how your uh MCP server will start, right? So now how do we write a agent? So we move on to the step number six because we are already delayed. Uh what we need to create is we create a directory for creating an agent. We import a create a virtual environment. We uh you all know why we need a virtual environment to segregate uh the issues of conflicting libraries and all. So we create a virtual one environment in Python. We source that and we install the required toolkit for that and then that's it. Our ADK is ready to be configured. Now we'll create a simple application. Okay. So what I'll do is for the simplicity create another tab because here my service is already running. What I'll do is let's say this is my agent. I already have a agent. So ADK web now. Okay. So looks like I need to So let's do KDK web. We need to take the project ID. Yeah, that's correct. Okay. Yeah. So when you uh do the ADK web uh you will uh a test application would open up and you can start asking hi how can you help me Super some error. No problem. So I'll explain you in the interest of time uh that what all we need to do. Follow along. Right. So once you create a ADK create and give the application name. It will ask you to select the model. It will ask you where you want to uh deploy this particular model back end. Right? And then uh it will create an basic agent for you that will have env file in it agent. py right and your agent would look very similar to this. Okay. When you uh you can create an agent simple agent like this that name of the agent description and instruction. Right here we are not integrating it any tool. But how do we integrate that particular tool is uh likewise I mentioned in my presentation as well that you you will import this particular library and you update that particular code with your tools right here. Now you you will be able to use the tool. So this is the tool that we have already initiated on my local on the port number 5,000 right if in real world application it would be some external URL that you will be create you will be connecting to so your tool your tool server is running on this particular UL now you are creating a client for that toolbox and you are using that toolbox to get the output for that particular agent right Okay. And once you run it, you can learn you can ask these question right you know how uh how can you help me today and it will if you remember there were two use cases search by hotel name and search search by uh you know hotel and search by the city. So it model will ask you this agent will ask you you know what city you want to prefer and which hotel you are want to prefer and based on that it will return you the uh output. So this is how the whole workshop and this lab will be executed. Uh but uh nevertheless uh these are well instructed labs. You can follow along it. It will work pretty well. Uh so we are already on the top of the hour. If you have any questions please feel free put it in the chat. Right. and team is there to support in case later on if you face any issue in executing these labs you can always come back and connect to us. Yeah has a question that what is the advantage of MCP toolbox. So MCP toolbox is you see as a connector like like you use APIs today or you know not even as an API it is an extension for that like one single connector like behind the scenes for example if you you choose Postgress SQL today later on you want to choose the SQL server today or you want to choose some other like your interface remains the same for the client applications how the agent should be consuming the information your vacant can change so this is one of the use case where you can use the NCP servers. Okay. So, yeah, please. No, no, please. Uh, I think I'm already done with the presentation as well as the workshop. Team can execute this workshop. uh at the convenience. So it's a lengthy one. Yeah. So thank you Gjen. Actually it was really insightful and engaging workshop that you have presented and I hope the participants will be able to use it in practically from the recording and other thing those who could not catch up early on and everything and as because we are already passed the time and everything and you have answered most of the questions throughout the session and everything. So we would keep this uh questionaire for uh Chennai ach support at hacktoskll those who have queries or anything they can definitely reach out to them mail them and you are all your queries will be solved and resolved and everything so we'd like to thank you again for having the uh in this session whatever you did and if there are live experiments and everything it was amazing to watch and everything so I'd also like to thank everyone all the participants who joined us as because uh without them it would not have be possible at all and just to let everyone know Jenna a exchange hackathon is still open and you can even register right away. Go through the problem statements, gather your team and everything you need to do for the registration everything and also the last deadline is uh 21st September. I hope everyone have already received a mail that the extension dates have been pushed. So 21st September is the date and everything for your queries and everything do reach out to us and I hope everyone enjoyed the session. Thank you Gungjan for joining us. Thank you. It's pleasure of mine. Thank you. Good luck everyone. Thank you. Bye-bye.